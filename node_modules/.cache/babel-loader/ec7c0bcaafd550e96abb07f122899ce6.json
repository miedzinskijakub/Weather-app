{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miedziak\\\\Desktop\\\\weather\\\\app-weather\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Form from './Form';\nimport Result from './Result';\nimport './App.css'; //Klucz do Api\n\nconst APIKey = '1355db29be412c4bf1999ff232919774';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      country: '',\n      date: '',\n      city: '',\n      temp: '',\n      wind: '',\n      clouds: '',\n      tempMin: '',\n      tempMax: '',\n      err: 'false'\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n  }\n\n  // handleCitySubmit = (e) => {\n  //   e.preventDefault();\n  //   const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}&units=metric`;\n  // fetch(API)\n  // .then(response => {\n  //   if(response.ok){\n  //     return response\n  //   }\n  //   throw Error(\"Nie udało się\")\n  // }) //Spelniony\n  // .then(response => response.json())\n  // .then(data => {\n  //   const time = new Date().toLocaleString()\n  //   this.setState(state => ({\n  //   err: false,\n  //   date: time,\n  //   city: state.value,\n  //   sunrise: data.sys.sunrise,\n  //   sunset: data.sys.sunset,\n  //   temp: data.main.temp,\n  //   pressure: data.main.pressure,\n  //   wind: data.wind.speed,\n  // }))\n  // })\n  // .catch(err => {\n  //   console.log(err);\n  // this.setState(prevState => ({\n  //     err:true,\n  //     city: prevState.value\n  //     }))\n  //   }) //Odrzucony\n  // }\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(prevState.value);\n    // console.log(this.state.value);\n    if (this.state.value.length === 0) return;\n\n    if (prevState.value !== this.state.value) {\n      const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}&units=metric`;\n      fetch(API).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Nie udało się\");\n      }) //Spelniony\n      .then(response => response.json()).then(data => {\n        const time = new Date().toLocaleString();\n        this.setState(state => ({\n          err: false,\n          date: time,\n          city: state.value,\n          temp: data.main.temp,\n          tempMax: data.main.temp_max,\n          tempMin: data.main.temp_min,\n          clouds: data.weather[0].main,\n          wind: data.wind.speed,\n          country: data.sys.country\n        }));\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => ({\n          err: true,\n          city: prevState.value\n        }));\n      }); //Odrzucony\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      value: this.state.value,\n      change: this.handleInputChange,\n      submit: this.handleCitySubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Result, {\n      weather: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Miedziak/Desktop/weather/app-weather/src/components/App.js"],"names":["React","Component","Form","Result","APIKey","App","state","value","country","date","city","temp","wind","clouds","tempMin","tempMax","err","handleInputChange","e","setState","target","componentDidUpdate","prevProps","prevState","length","API","fetch","then","response","ok","Error","json","data","time","Date","toLocaleString","main","temp_max","temp_min","weather","speed","sys","catch","console","log","render","handleCitySubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from './Form';\nimport Result from './Result';\nimport './App.css';\n//Klucz do Api\nconst APIKey ='1355db29be412c4bf1999ff232919774';\n\nclass App extends Component {\nstate = {\n  value: '',\n  country: '',\n  date: '',\n  city: '',\n  temp: '',\n  wind: '',\n  clouds: '',\n  tempMin: '',\n  tempMax: '',\n  err : 'false',\n}\n\nhandleInputChange = (e) => {\n    this.setState({\n      value: e.target.value\n    })\n}\n\n// handleCitySubmit = (e) => {\n//   e.preventDefault();\n\n//   const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}&units=metric`;\n\n// fetch(API)\n// .then(response => {\n//   if(response.ok){\n//     return response\n//   }\n//   throw Error(\"Nie udało się\")\n// }) //Spelniony\n// .then(response => response.json())\n// .then(data => {\n//   const time = new Date().toLocaleString()\n\n//   this.setState(state => ({\n//   err: false,\n//   date: time,\n//   city: state.value,\n//   sunrise: data.sys.sunrise,\n//   sunset: data.sys.sunset,\n//   temp: data.main.temp,\n//   pressure: data.main.pressure,\n//   wind: data.wind.speed,\n// }))\n// })\n// .catch(err => {\n//   console.log(err);\n// this.setState(prevState => ({\n//     err:true,\n//     city: prevState.value\n//     }))\n//   }) //Odrzucony\n\n\n// }\n\ncomponentDidUpdate(prevProps, prevState){\n  // console.log(prevState.value);\n  // console.log(this.state.value);\n\n  if(this.state.value.length === 0) return;\n  if(prevState.value !== this.state.value){\n    const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}&units=metric`;\n\n  fetch(API)\n  .then(response => {\n    if(response.ok){\n      return response\n    }\n    throw Error(\"Nie udało się\")\n  }) //Spelniony\n  .then(response => response.json())\n  .then(data => {\n    const time = new Date().toLocaleString()\n\n    this.setState(state => ({\n    err: false,\n    date: time,\n    city: state.value,\n    temp: data.main.temp,\n    tempMax: data.main.temp_max,\n    tempMin: data.main.temp_min,\n    clouds: data.weather[0].main,\n    wind: data.wind.speed,\n    country: data.sys.country\n  }))\n  })\n  .catch(err => {\n    console.log(err);\n  this.setState(prevState => ({\n      err:true,\n      city: prevState.value\n      }))\n    }) //Odrzucony\n  }\n}\n\nrender() {\n  return (\n    <div className=\"App\">\n      <Form\n      value={this.state.value}\n      change={this.handleInputChange}\n      submit={this.handleCitySubmit}/>\n      <Result weather={this.state}/>\n\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}