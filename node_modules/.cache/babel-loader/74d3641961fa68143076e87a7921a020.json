{"ast":null,"code":"var _jsxFileName = \"C:\\\\Weather-app\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Form from './Form';\nimport Result from './Result';\nimport './App.css';\nconst APIKey = '1355db29be412c4bf1999ff232919774';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      country: '',\n      date: '',\n      city: '',\n      temp: '',\n      weather: '',\n      tempMin: '',\n      tempMax: '',\n      icon: '',\n      err: 'false'\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.value.length === 0) return;\n\n    if (prevState.value !== this.state.value) {\n      const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}&units=metric`;\n      fetch(API).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Nie udało się\");\n      }).then(response => response.json()).then(data => {\n        const time = new Date().toLocaleString();\n        this.setState(state => ({\n          err: false,\n          date: time,\n          city: data.name,\n          temp: data.main.temp,\n          tempMax: data.main.temp_max,\n          tempMin: data.main.temp_min,\n          weather: data.weather[0].main,\n          icon: data.weather[0].icon,\n          country: data.sys.country\n        }));\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => ({\n          err: true,\n          city: prevState.value\n        }));\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      value: this.state.value,\n      change: this.handleInputChange,\n      submit: this.handleCitySubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Result, {\n      weather: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Weather-app/src/components/App.js"],"names":["React","Component","Form","Result","APIKey","App","state","value","country","date","city","temp","weather","tempMin","tempMax","icon","err","handleInputChange","e","setState","target","componentDidUpdate","prevProps","prevState","length","API","fetch","then","response","ok","Error","json","data","time","Date","toLocaleString","name","main","temp_max","temp_min","sys","catch","console","log","render","handleCitySubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from './Form';\r\nimport Result from './Result';\r\nimport './App.css';\r\n\r\nconst APIKey ='1355db29be412c4bf1999ff232919774';\r\n\r\nclass App extends Component {\r\nstate = {\r\n  value: '',\r\n  country: '',\r\n  date: '',\r\n  city: '',\r\n  temp: '',\r\n  weather: '',\r\n  tempMin: '',\r\n  tempMax: '',\r\n  icon: '',\r\n  err : 'false',\r\n}\r\n\r\nhandleInputChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value\r\n    })\r\n}\r\n\r\ncomponentDidUpdate(prevProps, prevState){\r\n\r\n\r\n  if(this.state.value.length === 0) return;\r\n  if(prevState.value !== this.state.value){\r\n\r\n  \r\n \r\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}&units=metric`;\r\n\r\n  fetch(API)\r\n  .then(response => {\r\n    if(response.ok){\r\n      return response\r\n    }\r\n    throw Error(\"Nie udało się\")\r\n  }) \r\n  .then(response => response.json())\r\n  .then(data => {\r\n    const time = new Date().toLocaleString()\r\n\r\n    this.setState(state => ({\r\n    err: false,\r\n    date: time,\r\n    city: data.name,\r\n    temp: data.main.temp,\r\n    tempMax: data.main.temp_max,\r\n    tempMin: data.main.temp_min,\r\n    weather: data.weather[0].main,\r\n    icon: data.weather[0].icon,\r\n    country: data.sys.country\r\n  }))\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  this.setState(prevState => ({\r\n      err:true,\r\n      city: prevState.value\r\n      }))\r\n    }) \r\n  }\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Form\r\n      value={this.state.value}\r\n      change={this.handleInputChange}\r\n      submit={this.handleCitySubmit}/>\r\n      <Result weather={this.state}/>\r\n\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}