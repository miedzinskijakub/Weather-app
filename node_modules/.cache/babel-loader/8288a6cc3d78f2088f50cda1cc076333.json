{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miedziak\\\\Desktop\\\\weather\\\\app-weather\\\\src\\\\components\\\\Result.js\";\nimport React from 'react';\nimport './Result.css';\n\nconst Result = props => {\n  const {\n    err,\n    city,\n    temp,\n    date,\n    sunrise,\n    sunset,\n    pressure,\n    wind,\n    country\n  } = props.weather;\n  let content = null;\n\n  if (!err && city) {\n    const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\n    const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\n    content = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, city, \", \", country), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, date), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, \"Aktualna temperatura: \", temp, \" \\xB0C\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"Wsch\\xF3d s\\u0142o\\u0144ca dzisiaj o: \", sunriseTime), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, \"Zach\\xF3d s\\u0142o\\u0144ca dzisiaj o: \", sunsetTime), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, \"Aktualna si\\u0142a wiatru: \", wind, \" m/s\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"Aktualna ci\\u015Bnienie: \", pressure, \" hPa\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"Kraj: \", country, \" \"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, err ? `` : content);\n};\n\nexport default Result;","map":{"version":3,"sources":["C:/Users/Miedziak/Desktop/weather/app-weather/src/components/Result.js"],"names":["React","Result","props","err","city","temp","date","sunrise","sunset","pressure","wind","country","weather","content","sunriseTime","Date","toLocaleTimeString","sunsetTime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAEtB,QAAK;AAACC,IAAAA,GAAD;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA,MAAjC;AAAyCC,IAAAA,QAAzC;AAAmDC,IAAAA,IAAnD;AAAyDC,IAAAA;AAAzD,MAAoET,KAAK,CAACU,OAA/E;AAEA,MAAIC,OAAO,GAAG,IAAd;;AAEA,MAAG,CAACV,GAAD,IAAQC,IAAX,EAAgB;AAEZ,UAAMU,WAAW,GAAG,IAAIC,IAAJ,CAASR,OAAO,GAAG,IAAnB,EAAyBS,kBAAzB,EAApB;AACA,UAAMC,UAAU,GAAG,IAAIF,IAAJ,CAASP,MAAM,GAAG,IAAlB,EAAwBQ,kBAAxB,EAAnB;AACAH,IAAAA,OAAO,gBAIP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKT,IAAL,QAAaO,OAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,IAAL,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA2BD,IAA3B,WAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAA8BS,WAA9B,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAA8BG,UAA9B,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA2BP,IAA3B,SANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAyBD,QAAzB,SAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAWE,OAAX,MARJ,CAJA;AAeH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,GAAG,GAAI,EAAJ,GACJU,OAFJ,CADJ;AAQH,CAnCD;;AAqCA,eAAeZ,MAAf","sourcesContent":["import React from 'react';\r\nimport './Result.css';\r\n\r\nconst Result = (props) => {\r\n\r\n    const{err, city, temp, date, sunrise, sunset, pressure, wind, country} = props.weather;\r\n\r\n    let content = null;\r\n\r\n    if(!err && city){\r\n\r\n        const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n        const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n        content = (\r\n\r\n\r\n\r\n        <div>\r\n            <h3>{city}, {country}</h3>\r\n            <h4>{date}</h4>\r\n            <h2>Aktualna temperatura: {temp} &#176;C</h2>\r\n            <h4>Wschód słońca dzisiaj o: {sunriseTime}</h4>\r\n            <h4>Zachód słońca dzisiaj o: {sunsetTime}</h4>\r\n            <h4>Aktualna siła wiatru: {wind} m/s</h4>\r\n            <h4>Aktualna ciśnienie: {pressure} hPa</h4>\r\n            <h4>Kraj: {country} </h4>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"result\">\r\n            {err ? `` :\r\n            content}\r\n        </div>\r\n\r\n\r\n     );\r\n}\r\n\r\nexport default Result;"]},"metadata":{},"sourceType":"module"}